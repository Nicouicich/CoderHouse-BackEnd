use gran-mate-gourmet
db.createCollection("producto")
db.createCollection("mensaje")

Punto 1 y 2|
db.mensajes.insert([{nombre:"Nicolas", mensaje:"Hola"},
{nombre:"Robert", mensaje:"Como"},
{nombre:"Matias", mensaje:"Estas"},
{nombre:"Juan", mensaje:"ping"},
{nombre:"Carlos", mensaje:"menem"},
{nombre:"Pedro", mensaje:"ocho"},
{nombre:"Raul", mensaje:"cuatro"},
{nombre:"Juliet", mensaje:"veinte"},
{nombre:"Marcos", mensaje:"tres"},
{nombre:"Brain", mensaje:"dametodo"}
])
db.categories.insert([{nombre:"Mate", descripcion:"De color"},{nombre:"Yerba", descripcion:"Amarga"}, {nombre:"Termo", descripcion:"1,5L"}])
db.products.insert([{
nombre:"Teclado" , descripcion:"Hyperx" , precio:1500 , stock:20, categoryName:"Mate"},
{nombre:"Monitor" , descripcion:"LG" , precio:12331 , stock:12},
{nombre:"Mouse" , descripcion:"Logitech" , precio:1112 , stock:1},
{nombre:"Notebook" , descripcion:"Asus" , precio:14123 , stock:5},
{nombre:"GPU" , descripcion:"Nvidia" , precio:43242 , stock:7},
{nombre:"Procesador" , descripcion:"Intel" , precio:44413 , stock:9},
{nombre:"Motherboard" , descripcion:"Asus" , precio:123123 , stock:41},
{nombre:"MemoriaRAM" , descripcion:"Hyperx" , precio:33322 , stock:13},
{nombre:"Reloj" , descripcion:"Samsung" , precio:4442 , stock:24},
{nombre:"Monitor" , descripcion:"Samsung" , precio:11232 , stock:15},
], {ordered: false})

Punto 3
db.productos.find().pretty()
db.mensajes.find().pretty()

Punto 4
db.productos.count()
db.mensajes.count()

Punto 5 A
db.productos.insertOne({nombre:"Tele" , descripcion:"Samsung" , precio:3333 , stock:5})

B
db.productos.find({nombre:"Teclado", precio: {$lt:2000}})
  1
  db.productos.find({ $and: [ { precio: {$gt:1000} }, {precio: {$lt:5000} } ] })
  2
  db.productos.find({nombre:"Monitor", precio: {$gt:1000}})
  3
  db.productos.find().sort({"precio":1})[2].nombre
  otra opcion: db.productos.find().sort({"precio":1}).skip(2).limit(1)  (pero falta aclarar el campo)

C - Para hacer este ejercicio saque el stock que le habia agregado con este comando:
db.productos.update({"stock": {$gt: 0}}, {$unset: {stock:""}}, {multi:true})
Con esta sentencia le puedo agregar a todos los que no tengan el nombre vacio el stock de 100
db.productos.update({"nombre": {$ne:""}}, {$set: {stock:100}}, {multi:true})

D
db.productos.update({"precio": {$gt:4000}}, {$set: {stock:0}}, {multi:true})

E
db.productos.deleteMany({"precio": {$lt:2000}})

6
db.createUser(
 {
 user: "pepe",
 pwd: "asd456",
 roles: [
 { role: "read", db: "gran-mate-gourmet" }
 ]
 }
)
--
Se cierra el sv y se lo vuelve a ejecutar como mongod --auth para habilitar el modo autenticacion
